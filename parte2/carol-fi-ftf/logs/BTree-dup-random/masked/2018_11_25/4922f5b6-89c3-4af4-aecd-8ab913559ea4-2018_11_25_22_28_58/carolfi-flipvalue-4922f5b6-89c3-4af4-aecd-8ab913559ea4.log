[INFO -- 2018-11-25 22:28:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 22:28:55]
Initialization strings:
[INFO -- 2018-11-25 22:28:55]
(1) file /tmp/BTree-dup/main
[INFO -- 2018-11-25 22:28:55]
(2)  set args /tmp/BTree-dup/input_100000 /tmp/BTree-dup/output_100000 /tmp/BTree-dup-detection.log /tmp/BTree-dup/output2_100000
[INFO -- 2018-11-25 22:28:55]
initSignal:0
[INFO -- 2018-11-25 22:28:55]
endSignal:2
[INFO -- 2018-11-25 22:28:55]
faultModel:2
[INFO -- 2018-11-25 22:28:56]
Backtrace BEGIN:
#0  0x000055555555663b in BTreeNode::insertNonFull (this=0x555555ce1e10, k=897671) at BTree_dup.cpp:537
#1  0x0000555555556639 in BTreeNode::insertNonFull (this=0x555555bee480, k=897671) at BTree_dup.cpp:535
#2  0x0000555555556639 in BTreeNode::insertNonFull (this=0x555555ce1f30, k=897671) at BTree_dup.cpp:535
#3  0x0000555555556478 in BTree::insert (this=0x7fffffffda50, k=897671) at BTree_dup.cpp:489
#4  0x0000555555556c25 in runner (input=0x7fffffffe22a "/tmp/BTree-dup/input_100000") at BTree_dup.cpp:664
#5  0x0000555555556f7a in main (argc=5, argv=0x7fffffffde68) at BTree_dup.cpp:712

532				if (keys[i+1] < k)
533					i++;
534			}
535			C[i+1]->insertNonFull(k);
536		}
537	}
538	
539	// A utility function to split the child y of this node
540	// Note that y must be full when this function is called
541	void BTreeNode::splitChild(int i, BTreeNode *y)

Backtrace END
Memory content before bitflip:0x390x710x550x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffdd38
address max offset: 8
Memory content after  bitflip:0xfc0xe30x410xd30x3e0xa40x580x1e
frame name: main
symbol name: diff_time
symbol filename: BTree_dup.cpp
symbol line: 699
value: 1.7116342384363026e-162
value address: 0x7fffffffdd38
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-25 22:28:56]
Fault Injection Successful after 1.507880687713623s
[INFO -- 2018-11-25 22:28:57]
event type: exit
[INFO -- 2018-11-25 22:28:57]
exit code: 0
