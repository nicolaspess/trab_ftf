[INFO -- 2018-11-25 20:33:17]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 20:33:17]
Initialization strings:
[INFO -- 2018-11-25 20:33:17]
(1) file /tmp/BTree-dup/main
[INFO -- 2018-11-25 20:33:17]
(2)  set args /tmp/BTree-dup/input_100000 /tmp/BTree-dup/output_100000 /tmp/BTree-dup-detection.log /tmp/BTree-dup/output2_100000
[INFO -- 2018-11-25 20:33:17]
initSignal:0
[INFO -- 2018-11-25 20:33:17]
endSignal:2
[INFO -- 2018-11-25 20:33:17]
faultModel:0
[INFO -- 2018-11-25 20:33:17]
Backtrace BEGIN:
#0  0x0000555555556583 in BTreeNode::insertNonFull (this=0x555555773c40, k=4412265) at BTree_dup.cpp:520
#1  0x0000555555556639 in BTreeNode::insertNonFull (this=0x55555579a670, k=4412265) at BTree_dup.cpp:535
#2  0x0000555555556639 in BTreeNode::insertNonFull (this=0x555555787fb0, k=4412265) at BTree_dup.cpp:535
#3  0x0000555555556639 in BTreeNode::insertNonFull (this=0x55555577e350, k=4412265) at BTree_dup.cpp:535
#4  0x0000555555556478 in BTree::insert (this=0x7fffffffda50, k=4412265) at BTree_dup.cpp:489
#5  0x0000555555556c25 in runner (input=0x7fffffffe22a "/tmp/BTree-dup/input_100000") at BTree_dup.cpp:664
#6  0x0000555555556f51 in main (argc=5, argv=0x7fffffffde68) at BTree_dup.cpp:711

515			n = n+1;
516		}
517		else // If this node is not leaf
518		{
519			// Find the child which is going to have the new key
520			while (i >= 0 && keys[i] > k)
521				i--;
522	
523			// See if the found child is full
524			if (C[i+1]->n == 2*t-1)

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd97c
address max offset: 4
Memory content after  bitflip:0x000x000x100x00
frame name: BTreeNode::insertNonFull
symbol name: i
symbol filename: BTree_dup.cpp
symbol line: 499
value: 1048576
value address: 0x7fffffffd97c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 20:33:17]
Fault Injection Successful after 0.9902899265289307s
[INFO -- 2018-11-25 20:33:18]
event type: exit
[INFO -- 2018-11-25 20:33:18]
exit code: 0
