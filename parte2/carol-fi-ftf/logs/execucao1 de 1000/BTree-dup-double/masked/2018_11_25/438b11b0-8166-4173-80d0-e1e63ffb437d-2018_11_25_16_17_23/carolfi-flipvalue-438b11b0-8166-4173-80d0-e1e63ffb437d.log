[INFO -- 2018-11-25 16:17:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 16:17:20]
Initialization strings:
[INFO -- 2018-11-25 16:17:20]
(1) file /tmp/BTree-dup/main
[INFO -- 2018-11-25 16:17:20]
(2)  set args /tmp/BTree-dup/input_100000 /tmp/BTree-dup/output_100000 /tmp/BTree-dup-detection.log /tmp/BTree-dup/output2_100000
[INFO -- 2018-11-25 16:17:20]
initSignal:0
[INFO -- 2018-11-25 16:17:20]
endSignal:2
[INFO -- 2018-11-25 16:17:20]
faultModel:1
[INFO -- 2018-11-25 16:17:22]
Backtrace BEGIN:
#0  0x000055555555663b in BTreeNode::insertNonFull (this=0x555555784650, k=979016) at BTree_dup.cpp:537
#1  0x0000555555556639 in BTreeNode::insertNonFull (this=0x555555790ce0, k=979016) at BTree_dup.cpp:535
#2  0x0000555555556639 in BTreeNode::insertNonFull (this=0x55555578a0e0, k=979016) at BTree_dup.cpp:535
#3  0x0000555555556639 in BTreeNode::insertNonFull (this=0x5555557818c0, k=979016) at BTree_dup.cpp:535
#4  0x0000555555556639 in BTreeNode::insertNonFull (this=0x5555557738e0, k=979016) at BTree_dup.cpp:535
#5  0x0000555555556639 in BTreeNode::insertNonFull (this=0x55555577e350, k=979016) at BTree_dup.cpp:535
#6  0x0000555555556478 in BTree::insert (this=0x7fffffffda50, k=979016) at BTree_dup.cpp:489
#7  0x0000555555556c25 in runner (input=0x7fffffffe22a "/tmp/BTree-dup/input_100000") at BTree_dup.cpp:664
#8  0x0000555555556f51 in main (argc=5, argv=0x7fffffffde68) at BTree_dup.cpp:711

532				if (keys[i+1] < k)
533					i++;
534			}
535			C[i+1]->insertNonFull(k);
536		}
537	}
538	
539	// A utility function to split the child y of this node
540	// Note that y must be full when this function is called
541	void BTreeNode::splitChild(int i, BTreeNode *y)

Backtrace END
Fliping value of field: _M_value
Memory content before bitflip:0x4a0xcf0x100x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffda68
address max offset: 4
Memory content after  bitflip:0x0b0xcf0x100x00
frame name: runner
symbol name: start
symbol filename: BTree_dup.cpp
symbol line: 659
value: {<std::iterator<std::input_iterator_tag, int, long, int const*, int const&>> = {<No data fields>}, _M_stream = 0x7fffffffdac0, _M_value = 1101579, _M_ok = true}
value address: 0x7fffffffda60
Type: The type is a structure.
Type sizeof: 16
Field name: std::iterator<std::input_iterator_tag, int, long, int const*, int const&>
Field Type: The type is a structure.
Field Type sizeof: 1
Field name: _M_stream
Field Type: The type is a pointer.
Field Type sizeof: 8
Field name: _M_value
Field Type: The type is an integer type.
Field Type sizeof: 4
Field name: _M_ok
Field Type: A boolean type.
Field Type sizeof: 1

[INFO -- 2018-11-25 16:17:22]
Fault Injection Successful after 2.0331037044525146s
[INFO -- 2018-11-25 16:17:23]
event type: exit
[INFO -- 2018-11-25 16:17:23]
exit code: 0
