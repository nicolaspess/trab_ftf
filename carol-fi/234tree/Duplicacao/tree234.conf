[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 5

# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 30

# Commands to set the session inside GDB environment
# gdbInitStrings = file /tmp/quicksort/quicksort;set args 5000000 4 /tmp/quicksort/inputsort_134217728 /tmp/quicksort/output_5000000
gdbInitStrings = file /tmp/Tree234/main;set args /tmp/Tree234/input_100000 /tmp/Tree234/output_100000 /tmp/Tree234/detectionLog_100000.log tmp/Tree234/output2_100000

goldFile = /tmp/Tree234/gold_100000
outputFile = /tmp/Tree234/output_100000


# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 main

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 main

#[Tree234-random2]
# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 5
# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
#faultModel = 2

[Tree234-random]
faultModel = 2

[Tree234-single]
faultModel = 0

[Tree234-double]
faultModel = 1

[Tree234-zeros]
faultModel = 3

[Tree234-lsb]
faultModel = 4


