[INFO -- 2018-10-12 00:56:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 00:56:44]
Initialization strings:
[INFO -- 2018-10-12 00:56:44]
(1) file /tmp/BTree/main
[INFO -- 2018-10-12 00:56:44]
(2)  set args /tmp/BTree/input_100000 /tmp/BTree/output_100000
[INFO -- 2018-10-12 00:56:44]
initSignal:0
[INFO -- 2018-10-12 00:56:44]
endSignal:2
[INFO -- 2018-10-12 00:56:44]
faultModel:0
[INFO -- 2018-10-12 00:56:45]
Backtrace BEGIN:
#0  BTreeNode::insertNonFull (this=0x5555557c81e0, k=4231756) at BTree.cpp:522
#1  0x00005555555560d9 in BTreeNode::insertNonFull (this=0x555555780420, k=4231756) at BTree.cpp:533
#2  0x00005555555560d9 in BTreeNode::insertNonFull (this=0x5555557b7fb0, k=4231756) at BTree.cpp:533
#3  0x00005555555560d9 in BTreeNode::insertNonFull (this=0x5555557ce570, k=4231756) at BTree.cpp:533
#4  0x00005555555560d9 in BTreeNode::insertNonFull (this=0x55555579ea20, k=4231756) at BTree.cpp:533
#5  0x00005555555560d9 in BTreeNode::insertNonFull (this=0x55555579e990, k=4231756) at BTree.cpp:533
#6  0x0000555555555f18 in BTree::insert (this=0x7fffffffddc0, k=4231756) at BTree.cpp:487
#7  0x0000555555556601 in main (argc=3, argv=0x7fffffffded8) at BTree.cpp:665

517			// Find the child which is going to have the new key
518			while (i >= 0 && keys[i] > k)
519				i--;
520	
521			// See if the found child is full
522			if (C[i+1]->n == 2*t-1)
523			{
524				// If the child is full, then split it
525				splitChild(i+1, C[i+1]);
526	

Backtrace END
Memory content before bitflip:0x4c0x920x400x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffdd34
address max offset: 4
Memory content after  bitflip:0x440x920x400x00
frame name: BTreeNode::insertNonFull
symbol name: k
symbol filename: BTree.cpp
symbol line: 494
value: 4231748
value address: 0x7fffffffdd34
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-12 00:56:45]
Fault Injection Successful after 1.0492961406707764s
[INFO -- 2018-10-12 00:56:45]
event type: exit
[INFO -- 2018-10-12 00:56:45]
exit code: 0
